@using ASI.Basecode.Data.Models.CustomModels
@using ASI.Basecode.Data.Models
@model IEnumerable<VwUserRoleView>

@{
    ViewData["Title"] = "Manage Users";
    // ViewBag.TableId = "manageUsersTable";
    var resMsg = TempData["ResMsg"] as AlertMessageContent;
}

<div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-24">
    <h6 class="fw-semibold mb-0">Admin Users</h6>
    <ul class="d-flex align-items-center gap-2">
        <li class="fw-medium">
            <a href="index.html" class="d-flex align-items-center gap-1 hover-text-primary">
                <iconify-icon icon="solar:home-smile-angle-outline" class="icon text-lg"></iconify-icon>
                Dashboard
            </a>
        </li>
        <li>-</li>
        <li class="fw-medium">Users</li>
    </ul>
</div>

<div class="card h-100 p-16 radius-12">
    @if (User.IsInRole("administrator") || User.IsInRole("superadmin"))
    {
        <div>
            <div class="row pt-8 pb-8">
                <div class="col-12 text-end">
                    <a asp-action="Create" class="btn btn-primary w-200-px"><i class="bi bi-plus-circle"></i>&nbsp; Add New User</a>
                </div>
            </div>
        </div>
    }
    <table class="table bordered-table" id="manageUsersTable">
        <thead>
            <tr>
                <th style="text-align:center !important">
                    @Html.DisplayNameFor(model => model.UserId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                @* <th>
                    @Html.DisplayNameFor(model => model.Password)
                </th> *@
                <th>
                    @Html.DisplayNameFor(model => model.RoleName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expertise)
                </th>
                @if (User.FindFirst("UserRole")?.Value == "administrator" || User.FindFirst("UserRole")?.Value == "superadmin")
                {
                    <th>
                        Actions
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td style="text-align:center !important">
                        @Html.DisplayFor(modelItem => item.UserId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    @* <td>
                        @Html.DisplayFor(modelItem => item.Password)
                    </td> *@
                    <td>
                        @Html.DisplayFor(modelItem => item.RoleName)
                    </td>
                    <td>
                        @if(string.IsNullOrEmpty(item.Expertise))
                        {
                            @("Not applicable")
                        } else
                        {
                            @Html.DisplayFor(modelItem => item.Expertise)
                        }
                    </td>
                    @if (User.FindFirst("UserRole")?.Value == "administrator" || User.FindFirst("UserRole")?.Value == "superadmin")
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.UserId"><i class="bi bi-pencil-square" style="color:#0d6efd"></i></a> |
                            <a href="#" onclick="confirmDelete('@item.UserId'); return false;" id="@item.UserId"><i class="bi bi-trash" style="color:red"></i></a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<script src="~/assets/js/lib/jquery-3.7.1.min.js"></script>
<script src="~/toastr/toastr.min.js"></script>
<script type="text/javascript">
    function confirmDelete(userId) {
        toastr.options = {
            closeButton: true,
            timeOut: 0,
            extendedTimeOut: 0,
            positionClass: "toast-top-center",
        };

        toastr.warning(
            "<button type='button' id='confirmYes' class='btn btn-primary btn-sm'>Yes</button><button type='button' id='confirmNo' class='btn btn-secondary btn-sm'>No</button>",
            'Are you sure you want to delete this user?',
            {
                allowHtml: true,
                onShown: function (toast) {
                    document.getElementById('confirmYes').addEventListener('click', async function () {
                        console.log('Confirmed delete for UserId:', userId);
                        try {
                            const url = `/ManageUser/Delete/?id=${userId}`;
                            const response = await fetch(url, { method: "get" });

                            window.location.href = `@Url.ActionLink("Index", "ManageUser")`;
                        } catch (error) {
                            console.error('Fetch error:', error);
                            window.location.reload();
                        }
                        toastr.clear(toast);
                    });

                    document.getElementById('confirmNo').addEventListener('click', function () {
                        console.log('Canceled delete');
                        toastr.clear(toast);
                    });
                }
            }
        );
    }
</script>