@using ASI.Basecode.Data.Models.CustomModels
@using ASI.Basecode.Data.Models
@model IEnumerable<ASI.Basecode.Data.Models.VwNeedApprovalArticle>

@{
   var resMsg = TempData["ResMsg"] as string;

    var newArticles = Model.Where(a => !a.UpdatedBy.HasValue || a.UpdatedBy == 0).ToList();
    var editedArticles = Model.Where(a => a.UpdatedBy.HasValue && a.UpdatedBy > 0).ToList();
}

<div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-24">
    <h6 class="fw-semibold mb-0">Article</h6>
    <ul class="d-flex align-items-center gap-2">
        <li class="fw-medium">
            <a href="index.html" class="d-flex align-items-center gap-1 hover-text-primary">
                <iconify-icon icon="solar:home-smile-angle-outline" class="icon text-lg"></iconify-icon>
                Dashboard
            </a>
        </li>
        <li>-</li>
        <li class="fw-medium">Article</li>
    </ul>
</div>

<div class="d-flex justify-content-between align-items-center mb-3">
    <form asp-action="Index" method="get" class="d-flex">
        <input type="text" name="searchTerm" class="form-control me-2" placeholder="Search articles..." />
        <button type="submit" class="btn btn-primary">Search</button>
    </form>
    <a asp-action="Index" class="btn btn-primary w-200-px">Back</a>
</div>

<div class="mb-4">
    <a asp-action="PendingList" asp-route-sortBy="@ViewData["TitleSortParm"]" class="btn btn-secondary">Sort</a>
</div>

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="new-tab" data-bs-toggle="tab" data-bs-target="#new-articles" type="button" role="tab" aria-controls="new-articles" aria-selected="true">New Articles</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="edited-tab" data-bs-toggle="tab" data-bs-target="#edited-articles" type="button" role="tab" aria-controls="edited-articles" aria-selected="false">Edited Articles</button>
    </li>
</ul>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Render the TempData value as a JavaScript variable
        let triggerEditTab = @((TempData["EditTab"] != null) ? TempData["EditTab"] : 0);
        if (triggerEditTab == 1) {
            document.getElementById('edited-tab').click();
            console.log('Edit Tab Click: ' + triggerEditTab);
        }
        else {
            document.getElementById('new-tab').click();
            console.log('New Tab Click: ' + + triggerEditTab);
        }
    });
</script>


<div class="tab-content mt-4" id="myTabContent">
    <div class="tab-pane fade show active" id="new-articles" role="tabpanel" aria-labelledby="new-tab">
        <div class="row g-4">
            @foreach (var item in newArticles)
            {
                <div class="col-md-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                            <p class="card-text truncated-text" id="content-@item.ArticleId">@Html.DisplayFor(modelItem => item.Content)</p>
                            <a href="javascript:void(0);" class="btn btn-link text-primary read-more" data-target="content-@item.ArticleId">Read More</a>

                            @if (Convert.ToString(User.FindFirst("UserRole")?.Value) != "user" && Convert.ToString(User.FindFirst("UserRole")?.Value) != "support agent")
                            {
                                <div class="additional-details" id="details-@item.ArticleId" style="display: none;">
                                    <p class="card-text"><strong>Created By (User Id):</strong> @item.UserId</p>
                                    <p class="card-text"> <strong>Date Created:</strong> @(item.DateCreated?.ToString("MM/dd/yyyy") ?? "N/A")</p>
                                    <p class="card-text"><strong>Date Updated:</strong> @(item.DateUpdated.HasValue ? item.DateUpdated?.ToString("MM/dd/yyyy") : "N/A")</p>
                                    <p class="card-text"><strong>Updated By (User Id):</strong> @(item.UpdatedBy > 0 ? item.UpdatedBy.ToString() : "N/A")</p>
                                </div>

                                <div class="card-footer text-end">
                                    <a asp-action="Approve" asp-route-id="@item.ArticleId" class="btn btn-outline-primary">
                                        <i class="bi bi-check-square"></i> Approve
                                    </a>
                                    <a href="#" onclick="confirmDelete('@item.ArticleId'); return false;" class="btn btn-outline-danger btn-sm">
                                        <i class="bi bi-trash"></i> Delete
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="tab-pane fade" id="edited-articles" role="tabpanel" aria-labelledby="edited-tab">
        <div class="row g-4">
            @foreach (var item in editedArticles)
            {
                <div class="col-md-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                            <p class="card-text truncated-text" id="content-@item.ArticleId">@Html.DisplayFor(modelItem => item.Content)</p>
                            <a href="javascript:void(0);" class="btn btn-link text-primary read-more" data-target="content-@item.ArticleId">Read More</a>
                            @if (Convert.ToString(User.FindFirst("UserRole")?.Value) != "user" && Convert.ToString(User.FindFirst("UserRole")?.Value) != "support agent")
                            {
                                <div class="additional-details" id="details-@item.ArticleId" style="display: none;">
                                    <p class="card-text"><strong>Created By (User Id):</strong> @item.UserId</p>
                                    <p class="card-text"> <strong>Date Created:</strong> @(item.DateCreated?.ToString("MM/dd/yyyy") ?? "N/A")</p>
                                    <p class="card-text"><strong>Date Updated:</strong> @(item.DateUpdated.HasValue ? item.DateUpdated?.ToString("MM/dd/yyyy") : "N/A")</p>
                                    <p class="card-text"><strong>Updated By (User Id):</strong> @(item.UpdatedBy > 0 ? item.UpdatedBy.ToString() : "N/A")</p>
                                </div>

                                <div class="card-footer text-end">
                                    <a asp-action="Approve" asp-route-id="@item.ArticleId" class="btn btn-outline-primary">
                                        <i class="bi bi-check-square"></i> Approve
                                    </a>
                                    <a asp-action="Decline" asp-route-id="@item.ArticleId" class="btn btn-outline-warning">
                                        <i class="bi bi-x-square"></i> Decline
                                    </a>
                                </div>
                            }    
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script src="~/assets/js/lib/jquery-3.7.1.min.js"></script>
<script src="~/toastr/toastr.min.js"></script>
<script type="text/javascript">
    function confirmDelete(articleId) {
        toastr.options = {
            closeButton: true,
            timeOut: 0,
            extendedTimeOut: 0,
            positionClass: "toast-top-center",
        };

        toastr.warning(
            "<button type='button' id='confirmYes' class='btn btn-primary btn-sm'>Yes</button><button type='button' id='confirmNo' class='btn btn-secondary btn-sm'>No</button>",
            'Are you sure you want to delete this article?',
            {
                allowHtml: true,
                onShown: function (toast) {
                    document.getElementById('confirmYes').addEventListener('click', async function () {
                        console.log('Confirmed delete for ArticleId:', articleId);
                        try {
                            const url = `/ManageArticle/Delete/?id=${articleId}`;
                            const response = await fetch(url, { method: "get" });

                            window.location.href = `@Url.ActionLink("Index", "ManageArticle")`;
                        } catch (error) {
                            console.error('Fetch error:', error);
                            window.location.reload();
                        }
                        toastr.clear(toast);
                    });

                    document.getElementById('confirmNo').addEventListener('click', function () {
                        console.log('Canceled delete');
                        toastr.clear(toast);
                    });
                }
            }
        );
    }

        $(document).ready(function () {
        $(".card-text").each(function () {
            $(this).siblings(".read-more").show();
        });

        
        $(".read-more").on("click", function () {
            var targetId = $(this).data("target");
            var fullContent = $("#" + targetId); 
            var details = $("#details-" + targetId.split('-')[1]); 

            
            if (fullContent.hasClass("truncated-text")) {
                fullContent.removeClass("truncated-text"); 
                details.show(); 
                $(this).text("Read Less"); 
            } else {
                fullContent.addClass("truncated-text");
                details.hide(); 
                $(this).text("Read More");
            }
        });
    });

</script>


<style>
    .truncated-text {
        max-height: 80px;
        overflow: hidden; 
        text-overflow: ellipsis; 
    }
</style>
