@using ASI.Basecode.Data.Models.CustomModels
@using ASI.Basecode.Data.Models
@model IEnumerable<ASI.Basecode.Data.Models.VwApprovedArticle>

@{
    var userRole = User.FindFirst("UserRole")?.Value;

    if (!string.IsNullOrEmpty(userRole))
    {
        ViewData["Title"] = userRole == "user" ? "Article" : "Manage Articles";
    }

    var pendingList = Convert.ToInt32(ViewData["PendingList"].ToString());

    // var resMsg = TempData["ResMsg"] as string;
}

<div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
    <h6 class="fw-semibold mb-0">@ViewData["Title"]</h6>
    <ul class="d-flex align-items-center gap-2">
        <li class="fw-medium">
            <a href="index.html" class="d-flex align-items-center gap-1 hover-text-primary">
                <iconify-icon icon="solar:home-smile-angle-outline" class="icon text-lg"></iconify-icon>
                Dashboard
            </a>
        </li>
        <li>-</li>
        <li class="fw-medium">Articles</li>
    </ul>
</div>

@* @if (!string.IsNullOrEmpty(resMsg))
{
    <div class="alert alert-success mb-4" role="alert">
        @resMsg
    </div>
} *@

<div class="d-flex justify-content-between align-items-center mb-4">
    <div class="d-flex gap-3">
        @if (Convert.ToString(User.FindFirst("UserRole")?.Value) != "user")
        {
            <a asp-action="PendingList" class="btn btn-primary d-flex align-items-center" style="gap: 5px;">
                Pending Articles
                @if (pendingList > 0)
                {
                    <span class="badge text-sm bg-danger-500 border-0 d-flex justify-content-center align-items-center"
                          style="border-radius: 50%; width: 20px; height: 20px; color: white; font-weight: bold;">
                        @pendingList
                    </span>
                }
            </a>
        }

        <form asp-action="Index" method="get" class="d-flex">
            <input type="text" name="searchTerm" class="form-control me-2" placeholder="Search articles..." />
            <button type="submit" class="btn btn-primary">Search</button>
        </form>
    </div>

    @if (Convert.ToString(User.FindFirst("UserRole")?.Value) != "user")
    {
        <a asp-action="Create" class="btn btn-primary w-200-px"><i class="bi bi-plus-circle"></i>&nbsp; Add New Article</a>
    }
</div>

<div class="mb-4">
    <a asp-action="Index" asp-route-sortBy="@ViewData["TitleSortParm"]" class="btn btn-secondary">Sort</a>
</div>

<div class="row g-4">
    @foreach (var item in Model)
    {
        <div class="col-md-6 col-lg-4">
      
            <div class="card shadow-sm border-light rounded h-100">
                <div class="card-body">
          
                    <h5 class="card-title fw-bold">@Html.DisplayFor(modelItem => item.Title)</h5>
                    <p class="card-text truncated-text" id="content-@item.ArticleId">@Html.DisplayFor(modelItem => item.Content)</p>
                    <a href="javascript:void(0);" class="btn btn-link text-primary read-more" data-target="content-@item.ArticleId" style="display: none;">Read More</a>

                    <p class="text-muted small"><strong>Published On:</strong> @item.DateCreated?.ToString("MM/dd/yyyy")</p>
                </div>

                <div class="card-footer d-flex justify-content-between align-items-center">
                    @if (Convert.ToString(User.FindFirst("UserRole")?.Value) != "user")
                    {
                        <a asp-action="Edit" asp-route-id="@item.ArticleId" class="btn btn-outline-primary btn-sm">
                            <i class="bi bi-pencil-square"></i> Edit
                        </a>
                    }
                    @if (Convert.ToString(User.FindFirst("UserRole")?.Value) != "user" && Convert.ToString(User.FindFirst("UserRole")?.Value) != "support agent")
                    {
                        <a href="#" onclick="confirmDelete('@item.ArticleId'); return false;" class="btn btn-outline-danger btn-sm">
                            <i class="bi bi-trash"></i> Delete
                        </a>
                    }
                </div>
            </div>
        </div>
    }
</div>

<script src="~/assets/js/lib/jquery-3.7.1.min.js"></script>
<script src="~/toastr/toastr.min.js"></script>
<script type="text/javascript">
    function confirmDelete(articleId) {
        toastr.options = {
            closeButton: true,
            timeOut: 0,
            extendedTimeOut: 0,
            positionClass: "toast-top-center",
        };

        toastr.warning(
            "<button type='button' id='confirmYes' class='btn btn-primary btn-sm'>Yes</button><button type='button' id='confirmNo' class='btn btn-secondary btn-sm'>No</button>",
            'Are you sure you want to delete this article?',
            {
                allowHtml: true,
                onShown: function (toast) {
                    document.getElementById('confirmYes').addEventListener('click', async function () {
                        console.log('Confirmed delete for ArticleId:', articleId);
                        try {
                            const url = `/ManageArticle/Delete/?id=${articleId}`;
                            const response = await fetch(url, { method: "get" });

                            window.location.href = `@Url.ActionLink("Index", "ManageArticle")`;
                        } catch (error) {
                            console.error('Fetch error:', error);
                            window.location.reload();
                        }
                        toastr.clear(toast);
                    });

                    document.getElementById('confirmNo').addEventListener('click', function () {
                        console.log('Canceled delete');
                        toastr.clear(toast);
                    });
                }
            }
        );
    }

    $(document).ready(function () {
        // Toggle full content visibility on "Read More" click
        $(".read-more").on("click", function () {
            var targetId = $(this).data("target");
            var fullContent = $("#" + targetId);

            if (fullContent.hasClass("truncated-text")) {
                fullContent.removeClass("truncated-text");
                $(this).text("Read Less");
            } else {
                fullContent.addClass("truncated-text");
                $(this).text("Read More");
            }
        });

        // Check if content overflows, and only show "Read More" if necessary
        $(".card-text").each(function () {
            var content = $(this);
            var contentHeight = content[0].scrollHeight;
            var maxHeight = parseInt(content.css("max-height"));

            // If content is taller than the max-height, show the "Read More" button
            if (contentHeight > maxHeight) {
                content.siblings(".read-more").show();
            }
        });
    });
</script>

<style>
    .truncated-text {
        max-height: 80px;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>
